Java code for meeting Rooms:
import java.util.Collections;
import java.util.List;
import java.util.PriorityQueue;

public class MeetingRooms {
     public class Interval {
      int start, end;
      Interval(int start, int end) {
          this.start = start;
          this.end = end;
      }
  }
    public int minMeetingRooms(List<Interval> intervals) {
       if (intervals==null || intervals.size()==0) return 0;
        Collections.sort(intervals,(a,b)->a.start- b.start);
        PriorityQueue<Interval> minHeap=new PriorityQueue<>((a,b)->a.end-b.end);
        minHeap.add(intervals.get(0));
        for(int i=1;i<intervals.size();i++){
            Interval current=intervals.get(i);
            Interval earliest=minHeap.remove();
            //In this case we dont need an extra meeting room as we can continue in that meeting room
            if(current.start>= earliest.end){
                earliest.end=current.end;
            }
            else{
                minHeap.add(current);
            }
            minHeap.add(earliest);
        }
        return minHeap.size();
    }
}
